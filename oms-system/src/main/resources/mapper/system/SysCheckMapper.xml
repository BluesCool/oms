<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ydgj.oms.system.mapper.SysCheckMapper">
    <resultMap type="SysCheck" id="SysCheckResult">
        <result property="checkId" column="check_id"/>
        <result property="checkName" column="check_name"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectSysCheckVo">
        select check_id, check_name, create_by, create_time, update_by, update_time, remark
        from sys_check
    </sql>

    <select id="selectSysCheckList" parameterType="SysCheck" resultMap="SysCheckResult">
        <include refid="selectSysCheckVo"/>
        <where>
            <if test="checkName != null  and checkName != ''">
                and check_name like concat('%', #{checkName}, '%')
            </if>
        </where>
    </select>

    <select id="selectSysCheckByCheckId" parameterType="Long" resultMap="SysCheckResult">
        <include refid="selectSysCheckVo"/>
        where check_id = #{checkId}
    </select>

    <insert id="insertSysCheck" parameterType="SysCheck" useGeneratedKeys="true" keyProperty="checkId">
        insert into sys_check
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="checkName != null">
                check_name,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="checkName != null">
                #{checkName},
            </if>
            <if test="createBy != null">
                #{createBy},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateBy != null">
                #{updateBy},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="remark != null">
                #{remark},
            </if>
        </trim>
    </insert>

    <update id="updateSysCheck" parameterType="SysCheck">
        update sys_check
        <trim prefix="SET" suffixOverrides=",">
            <if test="checkName != null">
                check_name = #{checkName},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
        </trim>
        where check_id = #{checkId}
    </update>

    <delete id="deleteSysCheckByCheckId" parameterType="Long">
        delete
        from sys_check
        where check_id = #{checkId}
    </delete>

    <delete id="deleteSysCheckByCheckIds" parameterType="String">
        delete from sys_check where check_id in
        <foreach item="checkId" collection="array" open="(" separator="," close=")">
            #{checkId}
        </foreach>
    </delete>

    <select id="selectCheckAll" resultMap="SysCheckResult">
        <include refid="selectSysCheckVo"/>
    </select>

    <select id="selectSysCheckByCheckName" parameterType="String" resultMap="SysCheckResult">
        <include refid="selectSysCheckVo"/>
        where check_name = #{checkName}
    </select>
</mapper>